<?xml version="1.0"?>
<sdf version="1.5">
	 <!-- Lidar velodyne model -->
	 <model name="velodyne_hdl-32">
	   <!-- Unique Base link name -->
	   <link name="base">
		<!-- Offset the base by half the length of the cylinder -->
		<pose> 0 0 0.029355 0 0 0</pose>
		<inertial>
			<mass>1.2</mass>
			<inertia>
				<ixx>0.00108773</ixx>
				<iyy>0.001087473</iyy>
				<izz>0.001092437</izz>
				<ixy>0</ixy>
				<ixz>0</ixz>
				<iyz>0</iyz>
			</inertia>
		</inertial>
		<collision name="base_collision">
		 <geometry>
		  <cylinder>
		   <!-- Radius and length from the Velodyne schematics -->
		   <radius>0.04267</radius>
		   <length>0.05867</length>
		  </cylinder>
		 </geometry>
		</collision>
		<!-- The visual is mostly a copy of the collision -->
		<visual name ="base_visual">
		 <geometry>
		  <cylinder>
		   <radius>0.04267</radius>
		   <length>0.05867</length>
		  </cylinder>
		 </geometry>
		</visual>
	   </link>

	 <!-- Give the base link a unique name -->
	 <link name="top"> 
		<!-- Offset the top by half the length of the cylinder+base height .05867 -->
		<pose> 0 0 0.095455 0 0 0</pose>
		<inertial>
			<mass>0.1</mass>
			<inertia>
				<ixx>0.000090623</ixx>
				<iyy>0.000090623</iyy>
				<izz>0.000091036</izz>
				<ixy>0</ixy>
				<ixz>0</ixz>
				<iyz>0</iyz>
			</inertia>
		</inertial>
		<collision name="top_collision">
		 <geometry>
		  <cylinder>
		   <radius>0.04267</radius>
		   <length>0.07357</length>
		  </cylinder>
		 </geometry>
		</collision>
		<visual name ="top_visual">
		 <geometry>
		  <cylinder>
		   <radius>0.04267</radius>
		   <length>0.07357</length>
		  </cylinder>
		 </geometry>
		</visual>
		<!-- Qualify the object as a sensor object -->
		<sensor type="ray" name="sensor">
		 <!--Postion the ray sensor based on the specification. Also rotate it 
		 by 90 degrees around the X-Axis so that the <horizonal> rays become vertical-->
		 <pose>0 0 -0.004645 1.5707 0 0</pose>
		 <!-- Enable Visualization of the rays in the GUI-->
		 <visualize>true</visualize>
		 <!-- Set an update rate of the sensor -->
		 <update_rate>30</update_rate>
		 <ray>
			<!--Scan element contains horiz and/or vertical beams. No vertical for this-->
			<scan>
				<horizontal>
					<!--32 Beams for the velodyne-->
					<samples>32</samples>
					<!--Resolution is multiplied by the samples to determine the nmber of simulated beams vs interpolated beams-->
					<resolution>1</resolution>
					<!-- minimum angle in radians-->
					<min_angle>-0.53529248</min_angle>
					<!-- Max distance of the beam -->
					<max_angle>0.18622663</max_angle>
				</horizontal>
			</scan>
			<!-- Range of the beam -->
			<range>
				<min>0.05</min>
				<max>70</max>
				<resolution>0.02</resolution>
			</range>
			<!-- Generate sensor noise (Comment this out if you want an ideal sensor) -->
			<noise>
				<type>gaussian</type>
				<mean>0.0</mean>
				<stddev>0.02</stddev>
			</noise>
		 </ray>
		</sensor>
	   </link>

	   <!-- Each Joint must have a unique name -->
	   <joint type="revolute" name="joint">
	   	<!-- Position the joint at the bottom of the top link-->
		<pose>0 0 -0.036785 0 0 0</pose>
		<!-- Use the base link as the parent of the joint -->
		<parent>base</parent>
		<!--Use the top link as the child of the joint-->
		<child>top</child>
		<!--The axis defines he joint DoF-->
		<axis>
			<!--Revolve around the z-axis-->
			<xyz>0 0 1</xyz>
			<!--Limit refers to the range of motion of the joint-->
			<limit>
				<!-- liit the range of motion to be "continuous"-->
				<lower>-10000000000000000000000000</lower>
				<upper>10000000000000000000000000</upper>
			</limit>
		</axis>
	   </joint>
	 </model>
</sdf>

